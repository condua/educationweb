import { FaCheckCircle } from "react-icons/fa";
import { useInView } from "react-intersection-observer";
import { motion } from "framer-motion";
import edubackground from "/edubackground.jpg";
import technology from "/technology.jpg";
import whiteboard from "/whiteboard.jpg";
import solution from "/solution.jpg";
import CountUp from "react-countup";

import { useNavigate } from "react-router-dom";
import { useState } from "react";
const fadeInLeft = {
  hidden: { x: -100, opacity: 0 },
  visible: { x: 0, opacity: 1, transition: { duration: 0.8, ease: "easeOut" } },
};
const Features = () => {
  const { ref, inView } = useInView({
    triggerOnce: true,
    threshold: 0.15, // Khi ph·∫ßn t·ª≠ **ƒë·∫øn 40% khung nh√¨n** th√¨ hi·ªán
  });
  const navigate = useNavigate();
  const [startCounting, setStartCounting] = useState(false);

  const logos = [
    {
      id: 1,
      imgUrl: "/images/universities/bk.png",
    },
    {
      id: 2,
      imgUrl: "/images/universities/dhkt.png",
    },
    {
      id: 3,
      imgUrl: "/images/universities/dhqg.png",
    },
    {
      id: 4,
      imgUrl: "/images/universities/iu.png",
    },
    {
      id: 5,
      imgUrl: "/images/universities/khoay.png",
    },
    {
      id: 6,
      imgUrl: "/images/universities/khtn.png",
    },
    {
      id: 7,
      imgUrl: "/images/universities/uel.png",
    },
    {
      id: 8,
      imgUrl: "/images/universities/uit.png",
    },
    {
      id: 9,
      imgUrl: "/images/universities/ussh.png",
    },
  ];
  const data = [
    { value: 1000, suffix: "+", label: "H·ªçc sinh" },
    { value: 100, suffix: "%", label: "Ho√†n th√†nh xu·∫•t s·∫Øc" },
    { value: 100, suffix: "%", label: "Gi·∫£i ƒë√°p th·∫Øc m·∫Øc" },
    { value: 3, suffix: "+", label: "Chuy√™n gia" },
    { value: 5, suffix: "+", label: "NƒÉm kinh nghi·ªám" },
  ];

  const logoWidth = 100; // Chi·ªÅu r·ªông m·ªói logo (px)
  const gap = 20; // Kho·∫£ng c√°ch gi·ªØa c√°c logo (px)
  const totalWidth = (logoWidth + gap) * logos.length; // T·ªïng chi·ªÅu r·ªông 1 l∆∞·ª£t logo

  return (
    <section ref={ref} className="text-center pb-12 px-6 bg-white sm:-mt-20">
      <div className="w-full flex flex-col items-center">
        <motion.img
          className="sm:w-70 sm:h-50 w-45 h-30"
          src="/images/number1.png"
          alt="Number 1"
          // Animate: di chuy·ªÉn tr·ª•c Y [0, -20, 0], l·∫∑p v√¥ h·∫°n
          animate={{ y: [0, -20, 0] }}
          transition={{
            repeat: Infinity,
            duration: 2,
            ease: "easeInOut",
          }}
          draggable={false}
          onDragStart={(e) => e.preventDefault()}
        />
        {/* üé¨ Thanh logo cu·ªôn ngang li√™n t·ª•c */}
        <div className="sm:w-4/5 w-full overflow-hidden relative flex items-center py-5">
          <motion.div
            className="flex gap-5"
            animate={{ x: [-totalWidth, 0] }} // D·ªãch t·ª´ ph·∫£i qua tr√°i
            transition={{
              repeat: Infinity,
              duration: 10, // T·ªëc ƒë·ªô di chuy·ªÉn
              ease: "linear",
            }}
          >
            {/* üîÑ Nh√¢n ƒë√¥i danh s√°ch logo ƒë·ªÉ t·∫°o hi·ªáu ·ª©ng li·ªÅn m·∫°ch */}
            {[...logos, ...logos].map((logo, i) => (
              <img
                key={i}
                className="sm:w-[150px] sm:h-[150px] w-[80px] h-[80px] object-contain"
                src={logo.imgUrl}
                alt={`Logo ${logo.id}`}
                draggable={false}
                onDragStart={(e) => e.preventDefault()}
              />
            ))}
          </motion.div>
        </div>
      </div>
      <motion.h2
        initial="hidden"
        animate={inView ? "visible" : "hidden"}
        variants={fadeInLeft}
        className="text-2xl font-bold text-gray-800"
      >
        Nh·ªØng ƒëi·ªÉm n·ªïi b·∫≠t
      </motion.h2>
      {/* <p className="text-gray-600 max-w-xl mx-auto mt-2">
        Ormanei si forens interdum porttitor nulla turpis elitom. Diam vitae
        sollicitudin ut nec nam et pharetra gravida.
      </p> */}

      <motion.div
        initial="hidden"
        animate={inView ? "visible" : "hidden"}
        variants={fadeInLeft}
        onAnimationComplete={() => setStartCounting(true)} // üî• k√≠ch ho·∫°t ƒë·∫øm sau khi animation ho√†n t·∫•t
        className="flex justify-around flex-wrap gap-6 mt-8"
      >
        {data.map((item, index) => (
          <motion.div key={index} variants={fadeInLeft} className="text-center">
            <p className="text-2xl font-bold bg-gradient-to-r from-blue-500 to-teal-400 text-transparent bg-clip-text">
              {startCounting ? (
                <CountUp end={item.value} duration={3} suffix={item.suffix} />
              ) : (
                "0" + item.suffix // Hi·ªán 0 tr∆∞·ªõc khi ƒë·∫øm
              )}
            </p>
            <p className="text-gray-600">{item.label}</p>
          </motion.div>
        ))}
      </motion.div>

      <motion.h3
        initial="hidden"
        animate={inView ? "visible" : "hidden"}
        variants={fadeInLeft}
        className="text-xl font-semibold text-gray-800 mt-10"
      >
        Ch·ªâ c√≥ t·∫°i <span className="text-blue-500">MLAP.</span>
      </motion.h3>
      <motion.p
        initial="hidden"
        animate={inView ? "visible" : "hidden"}
        variants={fadeInLeft}
        className="text-gray-600 max-w-2xl mx-auto mt-2"
      >
        MLPA l√† n·ªÅn t·∫£ng ti√™n phong trong lƒ©nh v·ª±c gi√°o d·ª•c v√† c√¥ng ngh·ªá h√†ng
        ƒë·∫ßu t·∫°i Vi·ªát Nam
      </motion.p>

      <motion.div
        initial="hidden"
        animate={inView ? "visible" : "hidden"}
        variants={fadeInLeft}
        className="grid md:grid-cols-3 gap-6 mt-10"
      >
        <div className="p-6 bg-gray-100 rounded-lg text-center">
          <div className="text-blue-500 text-5xl">üìÑ</div>

          <h4 className="text-lg font-semibold mt-4">
            H√≥a ƒë∆°n, Thanh to√°n & H·ª£p ƒë·ªìng Tr·ª±c tuy·∫øn{" "}
          </h4>
          <p className="text-gray-600 mt-2">
            Ki·ªÉm so√°t t√†i ch√≠nh doanh nghi·ªáp d·ªÖ d√†ng v√† an to√†n h∆°n bao gi·ªù h·∫øt!
          </p>
        </div>
        <div className="p-6 bg-gray-100 rounded-lg text-center flex flex-col items-center">
          {/* <div className="text-green-500 text-4xl">üìÖ</div> */}
          <div className="w-13 h-13 bg-white rounded-lg shadow-lg  border-gray-300 text-center">
            {/* Ph·∫ßn ti√™u ƒë·ªÅ m√†u ƒë·ªè */}
            <div className="bg-red-500 text-white text-xs font-bold py-1 rounded-t-lg relative">
              <span>
                {new Date().toLocaleString("vi-VN", { month: "long" })}
              </span>
              <div className="absolute top-0 left-1 w-1 h-1 bg-gray-100 rounded-full border"></div>
              <div className="absolute top-0 right-1 w-1 h-1 bg-gray-100 rounded-full border"></div>
            </div>

            {/* Ph·∫ßn s·ªë ng√†y */}
            <div className="flex items-center justify-center  text-black font-bold text-xm">
              {new Date().toLocaleString("vi-VN", { day: "numeric" })}
            </div>
          </div>
          <h4 className="text-lg font-semibold mt-4">
            L√™n l·ªãch & Theo d√µi ƒëi·ªÉm danh d·ªÖ d√†ng{" "}
          </h4>
          <p className="text-gray-600 mt-2">
            S·∫Øp x·∫øp v√† ƒë·∫∑t tr∆∞·ªõc ph√≤ng h·ªçc ch·ªâ trong v√†i c√∫ nh·∫•p chu·ªôt, d√π ·ªü m·ªôt
            hay nhi·ªÅu c∆° s·ªü.
          </p>
        </div>
        <div className="p-6 bg-gray-100 rounded-lg text-center">
          <div className="text-blue-500 text-5xl">üë•</div>
          <h4 className="text-lg font-semibold mt-4">
            Qu·∫£n l√Ω kh√°ch h√†ng th√¥ng minh
          </h4>
          <p className="text-gray-600 mt-2">
            T·ª± ƒë·ªông h√≥a v√† theo d√µi email g·ª≠i ƒë·∫øn t·ª´ng c√° nh√¢n ho·∫∑c nh√≥m m·ªôt
            c√°ch hi·ªáu qu·∫£.
          </p>
        </div>
      </motion.div>
      {/* Additional Section */}
      <div className="mt-16">
        <h3 className="text-2xl font-bold text-gray-900">
          Nh·ªØng tr·∫£i nghi·ªám t·∫°i <span className="text-teal-500">MLPA</span>
        </h3>
        <p className="text-gray-600 max-w-3xl mx-auto mt-2">
          MLPA l√† m·ªôt n·ªÅn t·∫£ng cho ph√©p gi·∫£ng vi√™n t·∫°o l·ªõp h·ªçc tr·ª±c tuy·∫øn, l∆∞u
          tr·ªØ t√†i li·ªáu, qu·∫£n l√Ω b√†i t·∫≠p, theo d√µi th·ªùi h·∫°n n·ªôp b√†i v√† nhi·ªÅu t√≠nh
          nƒÉng kh√°c.
        </p>
        <div className="grid md:grid-cols-2 gap-6 mt-8 ">
          <div className="relative rounded-lg group hover:-translate-y-2 duration-400 hover:shadow-2xl hover:shadow-black">
            <img
              src={technology}
              alt="Instructor"
              className="w-full rounded-lg z-20"
            />
            <div className="absolute inset-0 bg-gray-900/50 flex flex-col justify-center items-center rounded-lg">
              <p className="text-white text-lg font-bold">
                Gi·∫£i ph√°p c√¥ng ngh·ªá
              </p>
              <button className="mt-2 px-4 py-2 border border-white text-white rounded-full cursor-pointer hover:bg-white hover:text-black duration-500 hover:shadow-black hover:shadow-2xl">
                T√¨m hi·ªÉu ngay
              </button>
            </div>
          </div>
          <div className="relative rounded-lg group hover:-translate-y-2 duration-400 hover:shadow-2xl hover:shadow-black">
            <img
              src={edubackground}
              alt="Students"
              className="w-full rounded-lg"
            />
            <div className="absolute inset-0 bg-gray-900/50 flex flex-col justify-center items-center rounded-lg">
              <p className="text-white text-lg font-bold">D√†nh cho h·ªçc vi√™n</p>
              <button
                onClick={() => {
                  navigate("/courses");
                }}
                className="mt-2 px-4 py-2 bg-blue-400 text-white rounded-full cursor-pointer hover:bg-blue-500 duration-500"
              >
                Tham gia ngay
              </button>
            </div>
          </div>
        </div>
      </div>
      <h2 className="text-3xl font-bold text-green-600 py-12">
        T√≠nh nƒÉng n·ªïi b·∫≠t
      </h2>
      {/* <p className="text-gray-600 mt-2">
        This very extraordinary feature can make learning activities more
        efficient
      </p> */}

      {/* Feature Section */}
      <div className="grid sm:grid-cols-2 gap-10 items-center">
        {/* Left Side: Image */}
        <div className="relative w-full hover:shadow-2xl hover:-translate-y-2 duration-300">
          <img
            src={whiteboard}
            alt="Classroom UI"
            className="rounded-lg shadow-lg"
          />
        </div>

        {/* Right Side: Text Content */}
        <div>
          <h3 className="text-xl font-semibold text-blue-900 md:pr-10 pr-0">
            M·ªôt <span className="text-green-500">giao di·ªán ng∆∞·ªùi d√πng</span>{" "}
            ƒë∆∞·ª£c thi·∫øt k·∫ø th√¢n thi·ªán v·ªõi h·ªçc sinh/sinh vi√™n
          </h3>
          <ul className="mt-4 space-y-3 text-gray-600 text-left">
            <li className="flex items-start">
              <FaCheckCircle className="text-green-500 mt-1 mr-2" />
              Gi·∫£ng vi√™n c√≥ tr√¨nh ƒë·ªô, t·ªët nghi·ªáp t·ª´ c√°c tr∆∞·ªùng ƒë·∫°i h·ªçc danh
              ti·∫øng
            </li>
            <li className="flex items-start">
              <FaCheckCircle className="text-green-500 mt-1 mr-2" />
              Giao di·ªán d·ªÖ nh√¨n, vi·ªác h·ªçc t·∫≠p theo t·ª´ng ch∆∞∆°ng r·∫•t thu·∫≠n l·ª£i
            </li>
            <li className="flex items-start">
              <FaCheckCircle className="text-green-500 mt-1 mr-2" />
              ƒê∆∞·ª£c cung c·∫•p c√°c t√†i li·ªáu v√† b√†i t·∫≠p ƒëi·ªán t·ª≠ theo t·ª´ng b√†i h·ªçc
            </li>
          </ul>
        </div>
      </div>

      {/* Second Feature Section */}
      <div className="sm:grid flex flex-col-reverse grid-cols-2 gap-10 items-center mt-16">
        {/* Left Side: Text Content */}
        <div>
          <h3 className="text-xl font-semibold text-blue-900">
            <span className="text-green-500">Cung c·∫•p</span> gi·∫£i ph√°p c√¥ng ngh·ªá
            cho m·ªçi ng∆∞·ªùi
          </h3>
          <p className="mt-4 text-gray-600">
            H·ªó tr·ª£ kh√°ch h√†ng ho√†n thi·ªán v√† x√¢y d·ª±ng nh·ªØng gi·∫£i ph√°p kinh doanh
            tr·ª±c tuy·ªÉn m·ªôt c√°ch thu·∫≠n ti·ªán v√† d·ªÖ d√†ng
          </p>
        </div>

        {/* Right Side: Image */}
        <div className="relative w-full hover:shadow-2xl hover:-translate-y-2 duration-300">
          <img
            src={solution}
            alt="Teacher and Student"
            className="rounded-lg shadow-lg"
          />
        </div>
      </div>
    </section>
  );
};
const FeatureCard = ({ title, description, image }) => {
  return (
    <div className="bg-white p-6 rounded-lg shadow-lg text-left flex flex-col items-start">
      <img src={image} alt={title} className="w-full rounded-lg mb-4" />
      <h3 className="text-xl font-semibold text-blue-600">{title}</h3>
      <p className="text-gray-600 mt-2">{description}</p>
    </div>
  );
};
export default Features;
